Traceback (most recent call last):
  File "C:\Users\zimme\miniconda3\envs\blm\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\zimme\miniconda3\envs\blm\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\zimme\miniconda3\envs\blm\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\zimme\miniconda3\envs\blm\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\zimme\miniconda3\envs\blm\lib\asyncio\base_events.py", line 646, in run_until_complete
    return future.result()
  File "C:\Users\zimme\miniconda3\envs\blm\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\zimme\miniconda3\envs\blm\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\zimme\miniconda3\envs\blm\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import scipy.signal as signal

fs=192 #kHz
ts=0.5 #ms
tt=np.arange(0,ts,1/fs)

f0=30
fm=60
aa=13
bb=1.5
cc=1.5
ss=zcSig(tt,f0,fm,aa,bb,cc)

#see also http://www.labbookpages.co.uk/audio/beamforming/fractionalDelay.html#filter
def delay(xx,tau):
    #tau = -4.5 # Fractional delay [samples].
    N = 21     # Filter length.
    n = np.arange(N)
    
    # Compute sinc filter.
    h = np.sinc(n - (N - 1) / 2 - tau)
    
    # Multiply sinc filter by window
    h *= np.blackman(N)
    
    # Normalize to get unity gain.
    h /= np.sum(h)

    uu=np.concatenate((xx,np.zeros(10,)))

    yy=signal.lfilter(h,1,uu); yy=yy[10:,]
    return yy

uu=np.concatenate((np.zeros(20,),np.real(ss)))
tu=np.arange(len(uu))/fs

fig = plt.figure("figure.figsize",[15,5])
dto=1
x0=delay(uu,0)
plt.plot(tu,x0,'.-')

x1=delay(uu,+dto)
plt.plot(tu,x1,'.-')

x2=delay(uu,-dto)
plt.plot(tu,x2,'.-')
plt.xlim(0,0.5);

------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [1;32mIn [6][0m, in [0;36m<cell line: 1>[1;34m()[0m
[1;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mscipy[39;00m[38;5;21;01m.[39;00m[38;5;21;01msignal[39;00m [38;5;28;01mas[39;00m [38;5;21;01msignal[39;00m
[0;32m      3[0m fs[38;5;241m=[39m[38;5;241m192[39m [38;5;66;03m#kHz[39;00m
[0;32m      4[0m ts[38;5;241m=[39m[38;5;241m0.5[39m [38;5;66;03m#ms[39;00m

[1;31mModuleNotFoundError[0m: No module named 'scipy'
ModuleNotFoundError: No module named 'scipy'

